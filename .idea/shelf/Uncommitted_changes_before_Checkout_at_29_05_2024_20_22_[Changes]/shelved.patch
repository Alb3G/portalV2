Index: src/main/webapp/jsp/reservas.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"\r\n\tpageEncoding=\"UTF-8\"%>\r\n<%@ page import=\"models.*,java.util.List\"%>\r\n<%@ page import=\"modelsDAO.UserDAO\"%>\r\n<%@ page import=\"modelsDAO.AppointmentDAO\"%>\r\n\r\n<%\r\n\tUser activeUser = (User) request.getSession().getAttribute(\"user\");\r\n\tif (activeUser.getUserType().equals(\"02\")) {response.sendRedirect(\"./tutoriaProfesor.jsp\");}\r\n\tList<User> teachers = UserDAO.getAllNameTeachers(activeUser.getCourse_id(), activeUser.getSchool_id());\r\n\tList<Appointment> appointments = (List<Appointment>) session.getAttribute(\"appointments\");\r\n\tString okMsg = (String) session.getAttribute(\"okMsg\");\r\n\tString errorMsg = (String) session.getAttribute(\"errorMsg\");\r\n\tString subject = \"\";\r\n%>\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n<% if (activeUser.getUserType().equals(\"01\")) { %>\r\n<link href=\"../styles/styleReserva.css\" rel=\"stylesheet\">\r\n<% } %>\r\n<link\r\n\thref=\"https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100..900;1,100..900&display=swap\"\r\n\trel=\"stylesheet\">\r\n<meta charset=\"UTF-8\">\r\n<title>Tutorías</title>\r\n</head>\r\n<body onload=\"detColoresTutorias(<%=activeUser.getSchool_id()%>)\">\r\n<button id=\"idUsuario\" style=\"display:none;\" value=\"<%= activeUser.getId() %>\"></button>\r\n<h4>RESERVAS DISPONIBLES</h4>\r\n<form action=\"../appointments\" method=\"get\" >\r\n\t<select id=\"profesorSelect\" name=\"selectedTeacherID\" class=\"profesorSelect\">\r\n\t\t<option disabled selected>Seleccione profesor/a</option>\r\n\t\t<%for (User teacher : teachers) {%>\r\n\t\t\t<option value=\"<%=teacher.getId()%>\"><%=teacher.getName()%></option>\r\n\t\t<%}%>\r\n\t</select>\r\n\t<input id=\"buttonSubmit\" type=\"submit\" class=\"buttonSubmit\">\r\n</form>\r\n\t<% if (okMsg != null) {%>\r\n\t<p class=\"okMsg\"><%=okMsg%></p>\r\n\t<%}%>\r\n\r\n\t<% if (errorMsg != null) {%>\r\n\t<p class=\"errorMsg\"><%=errorMsg%></p>\r\n\t<%}%>\r\n\r\n\t<div id=\"reservas\">\r\n\t\t<% if (appointments != null) {%>\r\n\r\n\t\t<div class=\"informacion\">\r\n\t\t\t<div class=\"informacionConcreta\">\r\n\t\t\t\t<h3>Asignatura: <span class=\"Letras\"><%= UserDAO.getSubjectsTeacher(Integer.parseInt((String) session.getAttribute(\"selectedTeacherID\"))) %></span></h3>\r\n\t\t\t\t<h3>Lugar: <span class=\"Letras\"><%= UserDAO.getNameSchoolTeacher(Integer.parseInt((String) session.getAttribute(\"selectedTeacherID\"))) %></span> </h3>\r\n\t\t\t\t<p><strong>Horario:</strong> de lunes a viernes de 17:00 a 20:00</p>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"legend\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span class=\"ocupado\"></span> Ocupados\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span class=\"libre\"></span> Libres\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span class=\"tuReserva\"></span> Tu Reserva\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<form action=\"../appointments\" method=\"post\">\r\n\t\t\t<table class=\"tablaReservas\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th>Lunes</th>\r\n\t\t\t\t\t<th>Martes</th>\r\n\t\t\t\t\t<th>Miércoles</th>\r\n\t\t\t\t\t<th>Jueves</th>\r\n\t\t\t\t\t<th>Viernes</th>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>17:00 - 18:00</td>\r\n\t\t\t\t\t<%for (Appointment a : AppointmentDAO.getAppointments1700(appointments)) {%>\r\n\t\t\t\t\t<%if (a.getStudentID() != null && a.getStudentID() != 0) {%>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t    <input type=\"radio\" id=\"<%=a.getId()%>\" value=\"<%=a.getId()%>\" name=\"hourSelectedID\" disabled data-student-id=\"<%=a.getStudentID()%>\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<%} else {%>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t    <input type=\"radio\" id=\"<%=a.getId()%>\" value=\"<%=a.getId()%>\" name=\"hourSelectedID\" data-student-id=\"0\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<%}%>\r\n\t\t\t\t\t<%}%>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>18:00 - 19:00</td>\r\n\t\t\t\t\t<%for (Appointment a : AppointmentDAO.getAppointments1800(appointments)) {%>\r\n\t\t\t\t\t<%if (a.getStudentID() != null && a.getStudentID() != 0) {%>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t    <input type=\"radio\" id=\"<%=a.getId()%>\" value=\"<%=a.getId()%>\" name=\"hourSelectedID\" disabled data-student-id=\"<%=a.getStudentID()%>\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<%} else {%>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t    <input type=\"radio\" id=\"<%=a.getId()%>\" value=\"<%=a.getId()%>\" name=\"hourSelectedID\" data-student-id=\"0\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<%}%>\r\n\t\t\t\t\t<%}%>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>19:00 - 20:00</td>\r\n\t\t\t\t\t<%for (Appointment a : AppointmentDAO.getAppointments1900(appointments)) {%>\r\n\t\t\t\t\t<%if (a.getStudentID() != null && a.getStudentID() != 0) {%>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t    <input type=\"radio\" id=\"<%=a.getId()%>\" value=\"<%=a.getId()%>\" name=\"hourSelectedID\" disabled data-student-id=\"<%=a.getStudentID()%>\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<%} else {%>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t    <input type=\"radio\" id=\"<%=a.getId()%>\" value=\"<%=a.getId()%>\" name=\"hourSelectedID\" data-student-id=\"0\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<%}%>\r\n\t\t\t\t\t<%}%>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t\t<div class=\"opcionReservar\">\r\n\t\t\t\t<input type=\"submit\" class=\"botonReserva\" value=\"Hacer Reserva\">\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t\t<form action=\"../deleteAppointment\" method=\"post\" class=\"opcionCancelar\">\r\n\t\t\t<button class=\"botonCancelar\" type=\"submit\">Cancelar Reserva</button>\r\n\t\t</form>\r\n\r\n\t\t<%}%>\r\n\t</div>\r\n\r\n\t<script type=\"text/javascript\">\r\n\tconst radios = document.querySelectorAll('input[type=\"radio\"]');\r\n\tconst idUsuario = document.getElementById('idUsuario').value;\r\n\r\n\tradios.forEach(radio => {\r\n\t    const studentId = radio.getAttribute('data-student-id');\r\n\r\n\t    if (radio.disabled) {\r\n\t        radio.closest('td').classList.add('ocupado');\r\n\t    }\r\n\r\n\t    if(studentId == idUsuario) {\r\n\t        radio.closest('td').classList.add('tuReserva');\r\n\t    }\r\n\t});\r\n\t</script>\r\n\t<script type=\"text/javascript\" src=\"../scripts/script.js\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/jsp/reservas.jsp b/src/main/webapp/jsp/reservas.jsp
--- a/src/main/webapp/jsp/reservas.jsp	(revision 3b5ef4ac0589afdb5d168c179932cbee8939aec8)
+++ b/src/main/webapp/jsp/reservas.jsp	(date 1717004536173)
@@ -10,8 +10,8 @@
 	if (activeUser.getUserType().equals("02")) {response.sendRedirect("./tutoriaProfesor.jsp");}
 	List<User> teachers = UserDAO.getAllNameTeachers(activeUser.getCourse_id(), activeUser.getSchool_id());
 	List<Appointment> appointments = (List<Appointment>) session.getAttribute("appointments");
-	String okMsg = (String) session.getAttribute("okMsg");
-	String errorMsg = (String) session.getAttribute("errorMsg");
+	String okMsg = (String) session.getAttribute("appointmentOk");
+	String errorMsg = (String) session.getAttribute("appointmentError");
 	String subject = "";
 %>
 
Index: src/main/java/modelsDAO/AppointmentDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package modelsDAO;\r\n\r\nimport connections.Conector;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport models.Appointment;\r\n\r\nimport java.sql.*;\r\nimport java.util.*;\r\n\r\npublic class AppointmentDAO {\r\n\r\n    /**\r\n     * Método que se utiliza para rescatar la lista de tutorías de un profesor concreto.\r\n     * @author Ricardo\r\n     * @param id Id del profesor\r\n     * @return appointments Lista con las tutorías del profesor.\r\n     */\r\n    public static List<Appointment> getAppointments(int id) {\r\n        Connection con = null;\r\n        List<Appointment> appointments = new ArrayList<>();\r\n\r\n        try {\r\n            con = new Conector().getMySqlConnection();\r\n            if (con != null) {\r\n                // No hace falta realizar una PreparedStatement porque el ID que recogemos no viene dado por el usuario, viene de la base de datos directamente\r\n                Statement stmt = con.createStatement();\r\n                ResultSet rs = stmt.executeQuery(\"select * from appointment WHERE teacher_id = \" + id);\r\n                while (rs.next()) {\r\n                    Appointment appointment = new Appointment();\r\n                    appointment.setId(rs.getString(\"id\"));\r\n                    appointment.setTeacherID(rs.getInt(\"teacher_id\"));\r\n                    appointment.setStudentID((Integer)rs.getObject(\"student_id\"));\r\n                    appointment.setDate(rs.getString(\"day\"));\r\n                    appointment.setTime(rs.getString(\"hour\"));\r\n                    appointments.add(appointment);\r\n                }\r\n            }\r\n\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            if (con != null) {\r\n                try {\r\n                    con.close();\r\n                } catch (SQLException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n\r\n        return appointments;\r\n    }\r\n\r\n    public static List<Appointment> getAppointmentsByHour(List<Appointment> appointments, String hour) {\r\n        List<Appointment> res = new ArrayList<>();\r\n\r\n        for(Appointment a : appointments) {\r\n            if(a.getTime().equals(hour)) {\r\n                res.add(a);\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    public static List<Appointment> getAppointments1700(List<Appointment> appointments) {\r\n        return getAppointmentsByHour(appointments, \"17:00\");\r\n    }\r\n\r\n    public static List<Appointment> getAppointments1800(List<Appointment> appointments) {\r\n        return getAppointmentsByHour(appointments, \"18:00\");\r\n    }\r\n\r\n    public static List<Appointment> getAppointments1900(List<Appointment> appointments) {\r\n        return getAppointmentsByHour(appointments, \"19:00\");\r\n    }\r\n\r\n//    public static List<Appointment> getMondayAppointments(List<Appointment> appointments) {\r\n//        return getAppointmentsByDay(appointments, 'L');\r\n//    }\r\n//\r\n//    public static List<Appointment> getTuesdayAppointments(List<Appointment> appointments) {\r\n//        return getAppointmentsByDay(appointments, 'M');\r\n//    }\r\n//\r\n//\r\n//    public static List<Appointment> getWednesdayAppointments(List<Appointment> appointments) {\r\n//        return getAppointmentsByDay(appointments, 'X');\r\n//    }\r\n//\r\n//\r\n//    public static List<Appointment> getThursdayAppointments(List<Appointment> appointments) {\r\n//        return getAppointmentsByDay(appointments, 'J');\r\n//    }\r\n//\r\n//\r\n//    public static List<Appointment> getFridayAppointments(List<Appointment> appointments) {\r\n//        return getAppointmentsByDay(appointments, 'V');\r\n//    }\r\n\r\n    /**\r\n     * Método que se utiliza para reservar una tutoría con un profesor.\r\n     * Si el estudiante ya tiene una hora reservada, no se le permitirá reservar otra.\r\n     * @author Ricardo y Jose\r\n     * @param ses Sesión recogida en AppointmentServlet.\r\n     * @param appointment_id Id de la hora seleccionada en la página de tutorías.\r\n     * @param appointments Lista con las tutorías del profesor seleccionado.\r\n     */\r\n    public static void updateAppointment(HttpSession ses, String appointment_id, int student_id, List<Appointment> appointments) {\r\n        Connection con = null;\r\n\r\n        boolean alreadyAppointed = false;\r\n        int i = 0;\r\n        while(i < appointments.size() && !alreadyAppointed) {\r\n            if(appointments.get(i).getStudentID() != null && appointments.get(i).getStudentID().equals(student_id))\r\n                alreadyAppointed = true;\r\n            i++;\r\n        }\r\n\r\n        if (!alreadyAppointed) {\r\n            try {\r\n                con = new Conector().getMySqlConnection();\r\n                PreparedStatement stmt = con.prepareStatement(\"UPDATE appointment set student_id = ? WHERE id = ?\");\r\n                stmt.setInt(1, student_id);\r\n                stmt.setString(2, appointment_id);\r\n                int results = stmt.executeUpdate();\r\n                if (results != 0) {\r\n                    ses.setAttribute(\"okMsg\", \"Se ha hecho la reserva con éxito\");\r\n                    ses.setAttribute(\"errorMsg\", null);\r\n                } else {\r\n                    ses.setAttribute(\"errorMsg\",\"No se ha podido realizar la reserva\");\r\n                    ses.setAttribute(\"okMsg\",null);\r\n                }\r\n\r\n            } catch (SQLException | ClassNotFoundException e) {\r\n                e.getStackTrace();\r\n            } finally {\r\n                if (con != null) {\r\n                    try {\r\n                        con.close();\r\n                    } catch (SQLException e) {\r\n                        e.getStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n            ses.setAttribute(\"errorMsg\",\"Ya tienes una reserva hecha\");\r\n            ses.setAttribute(\"okMsg\",null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Método que se utiliza para cancelar una reserva con un profesor.\r\n     * Si el estudiante no tiene ninguna hora reservada no podrá cancelar nada.\r\n     * @author Ricardo y Jose\r\n     * @param ses Sesión recogida en DeleteAppointmentServlet.\r\n     * @param student_id Id del estudiante que quiere cancelar la tutoría.\r\n     * @param appointments Lista con las tutorías del profesor seleccionado.\r\n     */\r\n    public static void deleteAppointment(HttpSession ses, int student_id, List<Appointment> appointments) {\r\n        ses.setAttribute(\"errorMsg\",\"Error al borrar las tutoría reservada\");\r\n        Connection con;\r\n        int teacher_id = 0;\r\n\r\n        boolean exists = false;\r\n        for (int i = 0; i < appointments.size() && !exists; i++) {\r\n            if (appointments.get(i).getStudentID() != null && appointments.get(i).getStudentID().equals(student_id)) {\r\n                exists = true;\r\n                teacher_id = appointments.get(i).getTeacherID();\r\n            }\r\n        }\r\n\r\n        if (exists) {\r\n            try {\r\n                con = new Conector().getMySqlConnection();\r\n                PreparedStatement ps = con.prepareStatement(\"UPDATE appointment set student_id = null WHERE student_id = ? and teacher_id = ?\");\r\n                ps.setInt(1,student_id);\r\n                ps.setInt(2,teacher_id);\r\n                int result = ps.executeUpdate();\r\n                if (result != 0) {\r\n                    ses.setAttribute(\"okMsg\",\"Se ha cancelado la tutoría reservada\");\r\n                    ses.setAttribute(\"errorMsg\",null);\r\n                } else {\r\n                    ses.setAttribute(\"okMsg\",null);\r\n                    ses.setAttribute(\"errorMsg\",\"No se ha podido cancelar la tutoría\");\r\n                }\r\n\r\n            } catch (SQLException | ClassNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n        } else {\r\n            ses.setAttribute(\"okMsg\",null);\r\n            ses.setAttribute(\"errorMsg\",\"No hay ninguna tutoría que cancelar\");\r\n        }\r\n    }\r\n\r\n    public static HashMap<String,Object> getAppointmentInfo(String appointment_id) {\r\n        Connection con = null;\r\n        HashMap<String,Object> appointmentInfo = new HashMap<>();\r\n\r\n        try {\r\n            con = new Conector().getMySqlConnection();\r\n            PreparedStatement ps = con.prepareStatement(\"SELECT * FROM appointment AS ap INNER JOIN user_obj AS u ON ap.student_id = u.id WHERE ap.id = ?\");\r\n            ps.setString(1, appointment_id);\r\n            ResultSet rs = ps.executeQuery();\r\n            if (rs.next()) {\r\n                appointmentInfo.put(\"studentName\", rs.getString(\"u.user_name\"));\r\n                appointmentInfo.put(\"studentSurname\", rs.getString(\"u.user_surname\"));\r\n                appointmentInfo.put(\"time\", rs.getString(\"ap.hour\"));\r\n                appointmentInfo.put(\"date\", rs.getString(\"ap.day\"));\r\n                appointmentInfo.put(\"room\", rs.getString(\"ap.room\"));\r\n            }\r\n\r\n        } catch (SQLException | ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            if (con != null) {\r\n                try {\r\n                    con.close();\r\n                } catch (SQLException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n\r\n        return appointmentInfo;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/modelsDAO/AppointmentDAO.java b/src/main/java/modelsDAO/AppointmentDAO.java
--- a/src/main/java/modelsDAO/AppointmentDAO.java	(revision 3b5ef4ac0589afdb5d168c179932cbee8939aec8)
+++ b/src/main/java/modelsDAO/AppointmentDAO.java	(date 1717004510930)
@@ -125,11 +125,11 @@
                 stmt.setString(2, appointment_id);
                 int results = stmt.executeUpdate();
                 if (results != 0) {
-                    ses.setAttribute("okMsg", "Se ha hecho la reserva con éxito");
-                    ses.setAttribute("errorMsg", null);
+                    ses.setAttribute("appointmentOk", "Se ha hecho la reserva con éxito");
+                    ses.setAttribute("appointmentError", null);
                 } else {
-                    ses.setAttribute("errorMsg","No se ha podido realizar la reserva");
-                    ses.setAttribute("okMsg",null);
+                    ses.setAttribute("appointmentError","No se ha podido realizar la reserva");
+                    ses.setAttribute("appointmentOk",null);
                 }
 
             } catch (SQLException | ClassNotFoundException e) {
@@ -145,8 +145,8 @@
             }
 
         } else {
-            ses.setAttribute("errorMsg","Ya tienes una reserva hecha");
-            ses.setAttribute("okMsg",null);
+            ses.setAttribute("appointmentError","Ya tienes una reserva hecha");
+            ses.setAttribute("appointmentOk",null);
         }
     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ad31cd45-267c-42e3-9e5e-59a2371d9970\" name=\"Changes\" comment=\"Intento de subir todo\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/portal.sql\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/portal.sql\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"1fe0b899-3038-48b8-87e0-66268c59aaa5\" name=\"Changes by jose.prados.morente\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/webapp/jsp/calificaciones.jsp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/webapp/jsp/calificaciones.jsp\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"pruebas\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\",\r\n    \"assignee\": \"Ricardoncio\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/Ricardoncio/portalV2.git\",\r\n    \"accountId\": \"18c06126-1588-48e4-9aa5-282047a2ba97\"\r\n  }\r\n}]]></component>\r\n  <component name=\"LineStatusTrackerManager\">\r\n    <file path=\"$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java\">\r\n      <ranges>\r\n        <range start1=\"16\" end1=\"16\" start2=\"16\" end2=\"18\" changelist=\"1fe0b899-3038-48b8-87e0-66268c59aaa5\" />\r\n        <range start1=\"19\" end1=\"20\" start2=\"21\" end2=\"21\" changelist=\"ad31cd45-267c-42e3-9e5e-59a2371d9970\" />\r\n        <range start1=\"21\" end1=\"23\" start2=\"22\" end2=\"23\" changelist=\"ad31cd45-267c-42e3-9e5e-59a2371d9970\" />\r\n        <range start1=\"29\" end1=\"30\" start2=\"29\" end2=\"30\" changelist=\"ad31cd45-267c-42e3-9e5e-59a2371d9970\" />\r\n        <range start1=\"32\" end1=\"33\" start2=\"32\" end2=\"32\" changelist=\"ad31cd45-267c-42e3-9e5e-59a2371d9970\" />\r\n        <range start1=\"34\" end1=\"34\" start2=\"33\" end2=\"34\" changelist=\"ad31cd45-267c-42e3-9e5e-59a2371d9970\" />\r\n      </ranges>\r\n    </file>\r\n  </component>\r\n  <component name=\"LogFilters\">\r\n    <option name=\"FILTER_ERRORS\" value=\"false\" />\r\n    <option name=\"FILTER_WARNINGS\" value=\"false\" />\r\n    <option name=\"FILTER_INFO\" value=\"true\" />\r\n    <option name=\"FILTER_DEBUG\" value=\"true\" />\r\n    <option name=\"CUSTOM_FILTER\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 1\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2h9DzmdOO29hXVtH8OmN61cK2Vi\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"Smart Tomcat.Unnamed.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"com.poratu.idea.plugins.tomcat\" nameIsGenerated=\"true\">\r\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Localhost Log\" />\r\n      <predefined_log_file enabled=\"true\" id=\"Tomcat Access Log\" />\r\n      <predefined_log_file id=\"Tomcat Catalina Log\" />\r\n      <predefined_log_file id=\"Tomcat Manager Log\" />\r\n      <predefined_log_file id=\"Tomcat Host Manager Log\" />\r\n      <option name=\"adminPort\" value=\"8010\" />\r\n      <option name=\"catalinaBase\" value=\"C:\\Users\\rsolo\\.SmartTomcat\\portal\\portal\" />\r\n      <option name=\"contextPath\" value=\"/portal\" />\r\n      <option name=\"docBase\" value=\"$PROJECT_DIR$/src/main/webapp\" />\r\n      <option name=\"envOptions\">\r\n        <map />\r\n      </option>\r\n      <option name=\"extraClassPath\" value=\"\" />\r\n      <option name=\"tomcatInfo\">\r\n        <TomcatInfo>\r\n          <option name=\"name\" value=\"Apache Tomcat/10.1.20\" />\r\n          <option name=\"path\" value=\"$PROJECT_DIR$/../portalAcademico/server/apache-tomcat-10.1.20\" />\r\n          <option name=\"version\" value=\"10.1.20.0\" />\r\n        </TomcatInfo>\r\n      </option>\r\n      <option name=\"vmOptions\" value=\"\" />\r\n      <module name=\"portal\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ad31cd45-267c-42e3-9e5e-59a2371d9970\" name=\"Changes\" comment=\"\" />\r\n      <created>1716997664028</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716997664028</updated>\r\n      <workItem from=\"1716997665075\" duration=\"1814000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Intento de subir todo\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716998006303</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716998006303</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Intento de subir todo\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Intento de subir todo\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3b5ef4ac0589afdb5d168c179932cbee8939aec8)
+++ b/.idea/workspace.xml	(date 1717004549211)
@@ -4,14 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ad31cd45-267c-42e3-9e5e-59a2371d9970" name="Changes" comment="Intento de subir todo">
+    <list default="true" id="ad31cd45-267c-42e3-9e5e-59a2371d9970" name="Changes" comment="Intento de subir todo 2">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/portal.sql" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/portal.sql" afterDir="false" />
-    </list>
-    <list id="1fe0b899-3038-48b8-87e0-66268c59aaa5" name="Changes by jose.prados.morente" comment="">
-      <change beforePath="$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/webapp/jsp/calificaciones.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/jsp/calificaciones.jsp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/modelsDAO/AppointmentDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/modelsDAO/AppointmentDAO.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/webapp/jsp/reservas.jsp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/webapp/jsp/reservas.jsp" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -38,18 +34,6 @@
     "accountId": "18c06126-1588-48e4-9aa5-282047a2ba97"
   }
 }]]></component>
-  <component name="LineStatusTrackerManager">
-    <file path="$PROJECT_DIR$/src/main/java/servlets/ShowGradesTeacherServlet.java">
-      <ranges>
-        <range start1="16" end1="16" start2="16" end2="18" changelist="1fe0b899-3038-48b8-87e0-66268c59aaa5" />
-        <range start1="19" end1="20" start2="21" end2="21" changelist="ad31cd45-267c-42e3-9e5e-59a2371d9970" />
-        <range start1="21" end1="23" start2="22" end2="23" changelist="ad31cd45-267c-42e3-9e5e-59a2371d9970" />
-        <range start1="29" end1="30" start2="29" end2="30" changelist="ad31cd45-267c-42e3-9e5e-59a2371d9970" />
-        <range start1="32" end1="33" start2="32" end2="32" changelist="ad31cd45-267c-42e3-9e5e-59a2371d9970" />
-        <range start1="34" end1="34" start2="33" end2="34" changelist="ad31cd45-267c-42e3-9e5e-59a2371d9970" />
-      </ranges>
-    </file>
-  </component>
   <component name="LogFilters">
     <option name="FILTER_ERRORS" value="false" />
     <option name="FILTER_WARNINGS" value="false" />
@@ -124,7 +108,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1716997664028</updated>
-      <workItem from="1716997665075" duration="1814000" />
+      <workItem from="1716997665075" duration="4219000" />
     </task>
     <task id="LOCAL-00001" summary="Intento de subir todo">
       <option name="closed" value="true" />
@@ -134,7 +118,15 @@
       <option name="project" value="LOCAL" />
       <updated>1716998006303</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Intento de subir todo 2">
+      <option name="closed" value="true" />
+      <created>1716999505757</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1716999505757</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -142,6 +134,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Intento de subir todo" />
-    <option name="LAST_COMMIT_MESSAGE" value="Intento de subir todo" />
+    <MESSAGE value="Intento de subir todo 2" />
+    <option name="LAST_COMMIT_MESSAGE" value="Intento de subir todo 2" />
   </component>
 </project>
\ No newline at end of file
